{"version":3,"file":"static/js/471.7cb33375.chunk.js","mappings":"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","sources":["components/list/list.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { FilterMatchMode } from 'primereact/api';\nimport { InputText } from 'primereact/inputtext';\nimport './list.css';\n\nfunction List() {\n\n    const employee = useSelector(state => state.employees.employees);\n    console.log(employee);\n\n    //useState pour gérer la valeur du filtre global de recherche.\n    const [globalFilterValue, setGlobalFilterValue] = useState('');\n\n    //useState pour gérer les filtres appliqués sur les données du tableau.\n    const [filters, setFilters] = useState({\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n        'country.name': { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n        representative: { value: null, matchMode: FilterMatchMode.IN },\n        status: { value: null, matchMode: FilterMatchMode.EQUALS },\n        verified: { value: null, matchMode: FilterMatchMode.EQUALS }\n    });\n\n    /**\n     * Gère les changements de la valeur du filtre global et met à jour l'état des filtres et la valeur du filtre global.\n     * Cette fonction est appelée lorsqu'un utilisateur tape dans un champ de recherche global pour filtrer les données du tableau.\n     *\n     * @param {Object} e - L'événement généré par l'interaction avec le champ de recherche global.\n     */\n    const onGlobalFilterChange = (e) => {\n        const value = e.target.value;\n        let _filters = { ...filters };\n\n        _filters['global'].value = value;\n\n        setFilters(_filters);\n        setGlobalFilterValue(value);\n    };\n\n    //Rendu de l'en-tête qui inclut un champ de recherche utilisant la fonction 'onGlobalFilterChange' pour mettre à jour les filtres.\n    const renderHeader = () => {\n        return (\n            <div className=\"flex justify-content-end\">\n                <span className=\"p-input-icon-left\">\n                    <i className=\"pi pi-search\" />\n                    <InputText value={globalFilterValue} onChange={onGlobalFilterChange} placeholder=\"Keyword Search\" />\n                </span>\n            </div>\n        );\n    };\n\n    return (\n        <section className='list-container'>\n            <div className=\"card\">\n                <DataTable value={employee} paginator stripedRows rows={10} dataKey=\"id\" filters={filters} filterDisplay=\"row\"  \n                globalFilterFields={[\n                    'firstName', \n                    'lastName', \n                    'startDate', \n                    'department', \n                    'dateOfBirth', \n                    'street', \n                    'city', \n                    'state', \n                    'zipCode']} \n                header={renderHeader()} \n                emptyMessage=\"No customers found.\"\n                rowsPerPageOptions={[5, 10, 25, 50]} tableStyle={{ minWidth: '50rem' }}>\n                    <Column field=\"firstName\" header=\"First Name\" sortable style={{ width: '15%' }}></Column>\n                    <Column field=\"lastName\" header=\"Name\" sortable style={{ width: '15%' }}></Column>\n                    <Column field=\"startDate\" header=\"Start Date\" sortable style={{ width: '10%' }}></Column>\n                    <Column field=\"department\" header=\"Department\" sortable style={{ width: '10%' }}></Column>\n                    <Column field=\"dateOfBirth\" header=\"Date of Birth\" sortable style={{ width: '10%' }}></Column>\n                    <Column field=\"street\" header=\"Street\" sortable style={{ width: '15%' }}></Column>\n                    <Column field=\"city\" header=\"City\" sortable style={{ width: '10%' }}></Column>\n                    <Column field=\"state\" header=\"State\" sortable style={{ width: '10%' }}></Column>\n                    <Column field=\"zipCode\" header=\"Zip Code\" sortable style={{ width: '5%' }}></Column>\n                </DataTable>\n            </div>\n        </section>\n    )\n};\n\nexport default List;"],"names":["employee","useSelector","state","employees","console","log","_useState","useState","_useState2","_slicedToArray","globalFilterValue","setGlobalFilterValue","_useState3","global","value","matchMode","FilterMatchMode","CONTAINS","name","STARTS_WITH","representative","IN","status","EQUALS","verified","_useState4","filters","setFilters","onGlobalFilterChange","e","target","_filters","_objectSpread","_jsx","className","children","_jsxs","DataTable","paginator","stripedRows","rows","dataKey","filterDisplay","globalFilterFields","header","InputText","onChange","placeholder","emptyMessage","rowsPerPageOptions","tableStyle","minWidth","Column","field","sortable","style","width"],"sourceRoot":""}